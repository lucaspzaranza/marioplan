{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dahsboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ec233bf0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => (\r\n    <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}>Log Out</a></li>\r\n        <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n            {props.profile.initials}\r\n        </NavLink></li>\r\n    </ul>\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signOut: () => dispatch(signOut())\r\n})\r\n   \r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => (\r\n    (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email, \r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type:'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n)","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => (\r\n    <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Signup</NavLink></li>\r\n        <li><NavLink to='/signin'>Login</NavLink></li>\r\n    </ul>\r\n)\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const {auth, profile} = props\r\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks/>\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className='brand-logo'>MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                    {\r\n                        notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary = ({project}) => (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n            <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst ProjectList = ({projects}) => (\r\n    <div className=\"container project-list section\">\r\n        { projects && projects.map(project => (\r\n            <Link to={'/project/' + project.id} key={project.id}>\r\n                <ProjectSummary project={project}/>\r\n            </Link>\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default ProjectList;","import React, {Component} from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const {projects, auth, notifications} = this.props;\r\n        // console.log(this.props);\r\n\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n        return (\r\n            <div className=\"dashboard containter\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n\r\n    if(project){\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{ project.title }</span>\r\n                        <p>{ project.content }</p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by { project.authorFirstName } {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading Project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    //console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([{collection: 'projects'}])\r\n)\r\n(ProjectDetails);","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state)\r\n    }\r\n\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text-text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {\r\n                            authError ? <p>{authError}</p> : null\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signIn: (credentials) => dispatch(signIn(credentials))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {signUp} from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state)\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props\r\n        if(auth.uid) return <Redirect to='/'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text-text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firtName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const {auth} = this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text-text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoProps = (state) => {\r\n    return { \r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    createProject: (project) => dispatch(createProject(project))\r\n})\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => ( // return a function\r\n    (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => dispatch({type: 'CREATE_PROJECT', project}))\r\n        .catch((err) => dispatch({type: 'CREATE_PROJECT_ERROR', err})) \r\n    }\r\n)","import React from 'react';\n//yarn add react-router-dom no terminal\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'; \nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dahsboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar/>\n        <Switch>\n          <Route exact path='/' component={Dashboard}/>\n          <Route path='/project/:id' component={ProjectDetails}/>\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login failed')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects : [ \r\n        {id: '1', title: 'Help me find Peach', content: \"He's in another castle...\"},\r\n        {id: '2', title: 'Collect all the stars', content: \"Let's get all of them.\"},\r\n        {id: '3', title: 'Egg hunt with Yoshi', content: \"Gotta catch'em all!\"}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDkMsoqE6M0O2J5p2wjdo_PbZQt8l-qSuo\",\r\n    authDomain: \"net-ninja-marioplan-c7114.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-marioplan-c7114.firebaseio.com\",\r\n    projectId: \"net-ninja-marioplan-c7114\",\r\n    storageBucket: \"net-ninja-marioplan-c7114.appspot.com\",\r\n    messagingSenderId: \"925743475045\",\r\n    appId: \"1:925743475045:web:b9f093ef0d810dd1af598c\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\n\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {reduxFirestore, getFirestore, createFirestoreInstance} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\nimport { useSelector  } from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  userProfile: 'users', // where profiles are stored in database\n  presence: 'presence', // where list of online users is stored in database\n  sessions: 'sessions'\n}\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n      return children\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}